{"version":3,"file":"static/js/105.5507b4a6.chunk.js","mappings":"+LAEaA,E,OAAYC,EAAAA,IAAH,sB,6BCiRtB,EA1NqB,WAEnB,OADAC,QAAQC,IAAIC,EAAAA,IAEV,SAACJ,EAAD,WAyME,SAACK,EAAA,EAAD,CACEC,MAAO,CAAC,CAAEC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAChCC,OAAQ,CACN,CACED,KAAM,CAAC,EAAG,IAAK,EAAG,IAAK,IAAK,KAGhCE,MAAO,IACPC,OAAQ,OAIf,C","sources":["pages/TrainingPage/TrainingPage.styled.tsx","pages/TrainingPage/TrainingPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import { Container } from './TrainingPage.styled';\n// import { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import { Autocomplete } from '@mui/material';\n// import TextField from '@mui/material/TextField';\n\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import Paper from '@mui/material/Paper';\n\nimport { LineChart } from '@mui/x-charts/LineChart';\n\n// import {\n//   LineChart,\n//   Line,\n//   CartesianGrid,\n//   CartesianAxis,\n//   XAxis,\n//   YAxis,\n//   Tooltip,\n// } from 'recharts';\n\n// const uData = [4000, 3000, 2000, 2780, 1890, 2390, 3490];\n// const pData = [2400, 1398, 4500, 3908, 4800, 3800, 4300];\n// const xLabels = [\n//   'Page A',\n//   'Page B',\n//   'Page C',\n//   'Page D',\n//   'Page E',\n//   'Page F',\n//   'Page G',\n// ];\n\n// function createData(\n//   name: string,\n//   calories: number,\n//   fat: number,\n//   carbs: number,\n//   protein: number\n// ) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nconst TrainingPage = () => {\n  console.log(AdapterDayjs);\n  return (\n    <Container>\n      {/* TrainingPage\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker />\n      </LocalizationProvider>\n      <Autocomplete\n        disablePortal\n        id=\"combo-box-demo\"\n        options={[\n          { label: 'The Shawshank Redemption', year: 1994 },\n          { label: 'The Godfather', year: 1972 },\n          { label: 'The Godfather: Part II', year: 1974 },\n          { label: 'The Dark Knight', year: 2008 },\n          { label: '12 Angry Men', year: 1957 },\n          { label: \"Schindler's List\", year: 1993 },\n          { label: 'Pulp Fiction', year: 1994 },\n          {\n            label: 'The Lord of the Rings: The Return of the King',\n            year: 2003,\n          },\n          { label: 'The Good, the Bad and the Ugly', year: 1966 },\n          { label: 'Fight Club', year: 1999 },\n          {\n            label: 'The Lord of the Rings: The Fellowship of the Ring',\n            year: 2001,\n          },\n          {\n            label: 'Star Wars: Episode V - The Empire Strikes Back',\n            year: 1980,\n          },\n          { label: 'Forrest Gump', year: 1994 },\n          { label: 'Inception', year: 2010 },\n          {\n            label: 'The Lord of the Rings: The Two Towers',\n            year: 2002,\n          },\n          { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n          { label: 'Goodfellas', year: 1990 },\n          { label: 'The Matrix', year: 1999 },\n          { label: 'Seven Samurai', year: 1954 },\n          {\n            label: 'Star Wars: Episode IV - A New Hope',\n            year: 1977,\n          },\n          { label: 'City of God', year: 2002 },\n          { label: 'Se7en', year: 1995 },\n          { label: 'The Silence of the Lambs', year: 1991 },\n          { label: \"It's a Wonderful Life\", year: 1946 },\n          { label: 'Life Is Beautiful', year: 1997 },\n          { label: 'The Usual Suspects', year: 1995 },\n          { label: 'Léon: The Professional', year: 1994 },\n          { label: 'Spirited Away', year: 2001 },\n          { label: 'Saving Private Ryan', year: 1998 },\n          { label: 'Once Upon a Time in the West', year: 1968 },\n          { label: 'American History X', year: 1998 },\n          { label: 'Interstellar', year: 2014 },\n          { label: 'Casablanca', year: 1942 },\n          { label: 'City Lights', year: 1931 },\n          { label: 'Psycho', year: 1960 },\n          { label: 'The Green Mile', year: 1999 },\n          { label: 'The Intouchables', year: 2011 },\n          { label: 'Modern Times', year: 1936 },\n          { label: 'Raiders of the Lost Ark', year: 1981 },\n          { label: 'Rear Window', year: 1954 },\n          { label: 'The Pianist', year: 2002 },\n          { label: 'The Departed', year: 2006 },\n          { label: 'Terminator 2: Judgment Day', year: 1991 },\n          { label: 'Back to the Future', year: 1985 },\n          { label: 'Whiplash', year: 2014 },\n          { label: 'Gladiator', year: 2000 },\n          { label: 'Memento', year: 2000 },\n          { label: 'The Prestige', year: 2006 },\n          { label: 'The Lion King', year: 1994 },\n          { label: 'Apocalypse Now', year: 1979 },\n          { label: 'Alien', year: 1979 },\n          { label: 'Sunset Boulevard', year: 1950 },\n          {\n            label:\n              'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n            year: 1964,\n          },\n          { label: 'The Great Dictator', year: 1940 },\n          { label: 'Cinema Paradiso', year: 1988 },\n          { label: 'The Lives of Others', year: 2006 },\n          { label: 'Grave of the Fireflies', year: 1988 },\n          { label: 'Paths of Glory', year: 1957 },\n          { label: 'Django Unchained', year: 2012 },\n          { label: 'The Shining', year: 1980 },\n          { label: 'WALL·E', year: 2008 },\n          { label: 'American Beauty', year: 1999 },\n          { label: 'The Dark Knight Rises', year: 2012 },\n          { label: 'Princess Mononoke', year: 1997 },\n          { label: 'Aliens', year: 1986 },\n          { label: 'Oldboy', year: 2003 },\n          { label: 'Once Upon a Time in America', year: 1984 },\n          { label: 'Witness for the Prosecution', year: 1957 },\n          { label: 'Das Boot', year: 1981 },\n          { label: 'Citizen Kane', year: 1941 },\n          { label: 'North by Northwest', year: 1959 },\n          { label: 'Vertigo', year: 1958 },\n          {\n            label: 'Star Wars: Episode VI - Return of the Jedi',\n            year: 1983,\n          },\n          { label: 'Reservoir Dogs', year: 1992 },\n          { label: 'Braveheart', year: 1995 },\n          { label: 'M', year: 1931 },\n          { label: 'Requiem for a Dream', year: 2000 },\n          { label: 'Amélie', year: 2001 },\n          { label: 'A Clockwork Orange', year: 1971 },\n          { label: 'Like Stars on Earth', year: 2007 },\n          { label: 'Taxi Driver', year: 1976 },\n          { label: 'Lawrence of Arabia', year: 1962 },\n          { label: 'Double Indemnity', year: 1944 },\n          {\n            label: 'Eternal Sunshine of the Spotless Mind',\n            year: 2004,\n          },\n          { label: 'Amadeus', year: 1984 },\n          { label: 'To Kill a Mockingbird', year: 1962 },\n          { label: 'Toy Story 3', year: 2010 },\n          { label: 'Logan', year: 2017 },\n          { label: 'Full Metal Jacket', year: 1987 },\n          { label: 'Dangal', year: 2016 },\n          { label: 'The Sting', year: 1973 },\n          { label: '2001: A Space Odyssey', year: 1968 },\n          { label: \"Singin' in the Rain\", year: 1952 },\n          { label: 'Toy Story', year: 1995 },\n          { label: 'Bicycle Thieves', year: 1948 },\n          { label: 'The Kid', year: 1921 },\n          { label: 'Inglourious Basterds', year: 2009 },\n          { label: 'Snatch', year: 2000 },\n          { label: '3 Idiots', year: 2009 },\n          { label: 'Monty Python and the Holy Grail', year: 1975 },\n        ]}\n        sx={{ width: 300 }}\n        renderInput={params => <TextField {...params} label=\"Movie\" />}\n      /> */}\n      {/* <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow\n                key={row.name}\n                sx={{ '&:last-of-type td, &:last-of-type th': { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer> */}\n      {/* <LineChart\n        width={500}\n        height={300}\n        series={[\n          { data: pData, label: 'pv' },\n          { data: uData, label: 'uv' },\n        ]}\n        xAxis={[{ scaleType: 'point', data: xLabels }]}\n      /> */}\n\n      {/* <LineChart\n        width={600}\n        height={300}\n        data={[\n          { name: 'Page A', uv: 400, pv: 2400, amt: 2400 },\n          { name: 'Page A', uv: 5000, pv: 5400, amt: 5400 },\n          { name: 'Page A', uv: 200, pv: 3500, amt: 5400 },\n          { name: 'Page A', uv: 400, pv: 1400, amt: 5400 },\n        ]}\n        margin={{ top: 5, right: 20, bottom: 5, left: 0 }}\n      >\n        <Line\n          type=\"monotone\"\n          dataKey=\"uv\"\n          stroke=\"#8884d8\"\n          activeDot={{ stroke: '#ff0000', strokeWidth: 2, r: 5 }}\n        />\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 0\" horizontal={false} />\n        <CartesianAxis width={5} x={100} />\n\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n      </LineChart> */}\n      <LineChart\n        xAxis={[{ data: [1, 2, 3, 5, 8, 10] }]}\n        series={[\n          {\n            data: [2, 5.5, 2, 8.5, 1.5, 5],\n          },\n        ]}\n        width={500}\n        height={300}\n      />\n    </Container>\n  );\n};\n\nexport default TrainingPage;\n"],"names":["Container","styled","console","log","AdapterDayjs","LineChart","xAxis","data","series","width","height"],"sourceRoot":""}