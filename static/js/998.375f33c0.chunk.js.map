{"version":3,"file":"static/js/998.375f33c0.chunk.js","mappings":"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","sources":["pages/LoginPage/LoginPage.styled.tsx","components/LoginForm/LoginForm.styled.tsx","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport bgTablet from '../../images/form-bg.jpg';\nimport bgTablet2x from '../../images/form-bg@2x.jpg';\nimport bgDesktop from '../../images/form-bg.jpg';\nimport bgDesktop2x from '../../images/form-bg@2x.jpg';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n  .form-container {\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n      background: linear-gradient(\n          to right,\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${bgTablet});\n\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background: linear-gradient(\n            to right,\n            rgba(9, 30, 63, 0.8),\n            rgba(9, 30, 63, 0.8)\n          ),\n          url(${bgTablet2x});\n      }\n    }\n    @media screen and (min-width: 1280px) {\n      width: 549px;\n      background: linear-gradient(\n          to right,\n          rgba(9, 30, 63, 0.8),\n          rgba(9, 30, 63, 0.8)\n        ),\n        url(${bgDesktop});\n\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background: linear-gradient(\n            to right,\n            rgba(9, 30, 63, 0.8),\n            rgba(9, 30, 63, 0.8)\n          ),\n          url(${bgDesktop2x});\n      }\n    }\n  }\n  .text-container {\n    width: 100%;\n    max-width: 450px;\n    margin: 0 auto;\n\n    @media screen and (min-width: 768px) {\n      display: block;\n      padding-top: 64px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      padding-top: 206px;\n      width: 450px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: fit-content;\n    }\n\n    .text {\n      position: relative;\n      padding-top: 49px;\n      b {\n        position: absolute;\n        left: 50%;\n        top: 4px;\n        transform: translateX(-50%);\n        display: block;\n        font-family: 'Abril Fatface';\n        font-weight: 400;\n        font-size: 59px;\n        line-height: calc(80 / 59);\n        text-align: center;\n\n        color: #ff6b08;\n        margin: 0 auto;\n\n        @media screen and (min-width: 768px) {\n          font-size: 69px;\n          top: -4px;\n        }\n      }\n\n      .text-body {\n        font-size: 13px;\n        line-height: calc(16 / 13);\n        text-align: center;\n        color: #242a37;\n        width: 229px;\n        margin: 0 auto;\n        margin-bottom: 28px;\n\n        @media screen and (min-width: 768px) {\n          width: 397px;\n          font-size: 24px;\n          line-height: calc(38 / 24);\n          margin-bottom: 32px;\n        }\n      }\n\n      .text-author {\n        position: relative;\n        text-align: center;\n        color: #898f9f;\n        margin: 0 auto;\n        width: fit-content;\n\n        @media screen and (min-width: 768px) {\n          font-size: 20px;\n          line-height: calc(24 / 20);\n        }\n\n        ::before {\n          content: '';\n          position: absolute;\n          top: -12px;\n          left: 0;\n          width: 100%;\n          height: 1px;\n          background-color: rgba(36, 42, 55, 0.5);\n        }\n      }\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport bg from '../../images/form-bg.jpg';\nimport bg2x from '../../images/form-bg@2x.jpg';\n\nexport const Container = styled.div`\n  @media screen and (min-width: ${props => props.theme.sizes.tablet}) {\n    display: flex;\n    align-items: center;\n    padding-top: 64px;\n    padding-bottom: 64px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.sizes.desktop}) {\n    min-height: 790px;\n  }\n  form {\n    margin: 0 auto;\n    display: block;\n    width: min(100%, 320px);\n    padding: 32px 20px;\n    background: linear-gradient(\n        to right,\n        ${props => props.theme.colors.transparent.formBg},\n        ${props => props.theme.colors.transparent.formBg}\n      ),\n      url(${bg});\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background: linear-gradient(\n          to right,\n          ${props => props.theme.colors.transparent.formBg},\n          ${props => props.theme.colors.transparent.formBg}\n        ),\n        url(${bg2x});\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 400px;\n      background: none;\n      background-color: ${props => props.theme.colors.bg.primary};\n    }\n\n    .google-button {\n      cursor: pointer;\n      display: block;\n      width: 150px;\n      padding: 11px 14px;\n      display: flex;\n      gap: 16px;\n      align-items: center;\n      background-color: ${props => props.theme.colors.bg.primary};\n      border: none;\n      margin: 0 auto;\n      margin-bottom: 28px;\n\n      @media screen and (min-width: 768px) {\n        background: ${props => props.theme.colors.bg.secondary};\n        box-shadow: 0px 2px 2px rgba(9, 30, 63, 0.15);\n      }\n    }\n\n    label {\n      display: block;\n      width: 100%;\n      margin-bottom: 20px;\n      color: white;\n      @media screen and (min-width: 768px) {\n        color: #898f9f;\n      }\n      input {\n        display: block;\n        width: 100%;\n        margin-bottom: 8px;\n        font-weight: 400;\n        padding: 13px 8px;\n\n        @media screen and (min-width: 768px) {\n          background: #f5f7fa;\n          box-shadow: inset 0px 1px 2px rgba(29, 29, 27, 0.15);\n          border: none;\n        }\n      }\n      .login-form__input-label {\n        display: block;\n        margin-bottom: 8px;\n        span {\n          color: ${props => props.theme.colors.bg.accentDark};\n        }\n      }\n      .login-form__error-message-container {\n        display: block;\n\n        color: #f25137;\n      }\n    }\n    .login-form__submit-button {\n      cursor: pointer;\n      display: block;\n      font-weight: 600;\n      font-size: 16px;\n      line-height: calc(20 / 16);\n      text-align: center;\n      color: ${props => props.theme.colors.bg.primary};\n      background-color: ${props => props.theme.colors.bg.accent};\n      border: none;\n      width: 100%;\n      height: 60px;\n      margin-bottom: 20px;\n    }\n\n    /* .registration-form__redirrect {\n      font-weight: 500;\n      font-size: 13px;\n      line-height: calc(16 / 13);\n      text-align: center;\n      color: ${props => props.theme.colors.text.secondaryDark};\n\n      a {\n        color: ${props => props.theme.colors.bg.accent};\n      }\n    } */\n\n    a {\n      color: ${props => props.theme.colors.bg.accent};\n      display: block;\n      margin: 0 auto;\n      width: fit-content;\n\n      /* text-align: center; */\n    }\n  }\n`;\n","import { Container } from './LoginForm.styled';\nimport { Link } from 'react-router-dom';\nimport { ILoginSubmitHandler } from '../../interfaces';\nimport { Formik, Field, Form as FormikForm, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { ReactComponent as GoogleIcon } from '../../images/icons/google.svg';\nexport const LoginForm = ({ loginSubmitHandler }: ILoginSubmitHandler) => {\n  const schema = yup.object().shape({\n    email: yup\n      .string()\n      .matches(/^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$/, 'Invalid format')\n      .required('This field is required')\n      .trim(),\n    password: yup\n      .string()\n      .min(8, 'Minimum input length 8 symbols')\n      .matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).+$/, 'Invalid format')\n      .required('This field is required'),\n  });\n\n  const submitHandler = async (values: {\n    email: string;\n    password: string;\n  }): Promise<void> => {\n    const isValid = await schema.isValid(values);\n\n    if (isValid) {\n      const result = { ...values };\n      loginSubmitHandler(result);\n    }\n  };\n\n  return (\n    <Container>\n      <Formik\n        onSubmit={submitHandler}\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n      >\n        <FormikForm>\n          <button type=\"button\" className=\"google-button\">\n            <span className=\"google-button__icon-container\">\n              <GoogleIcon className=\"google-button__icon\" />\n            </span>\n            <span className=\"google-button__text\">Google</span>\n          </button>\n\n          <label htmlFor=\"login-form__email-input\">\n            <span className=\"login-form__input-label\">\n              Email <span>*</span>\n            </span>\n\n            <Field\n              name=\"email\"\n              type=\"text\"\n              id=\"login-form__email-input\"\n              placeholder=\"your@email.com\"\n            />\n            <span className=\"login-form__error-message-container\">\n              <ErrorMessage name=\"email\" />\n            </span>\n          </label>\n          <label htmlFor=\"login-form__password-input\">\n            <span className=\"login-form__input-label\">\n              Password <span>*</span>\n            </span>\n            <Field\n              name=\"password\"\n              type=\"password\"\n              id=\"login-form__password-input\"\n              placeholder=\"Password\"\n            />\n            <span className=\"login-form__error-message-container\">\n              <ErrorMessage name=\"password\" />\n            </span>\n          </label>\n\n          <button className=\"login-form__submit-button\" type=\"submit\">\n            Login\n          </button>\n\n          <Link className=\"login-form__redirrect\" to=\"/registration\">\n            Register\n          </Link>\n        </FormikForm>\n      </Formik>\n    </Container>\n  );\n};\n","import { Container } from './LoginPage.styled';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { signIn } from '../../redux/auth/operations';\n\nimport { ISignInData } from '../../interfaces';\n\nconst LoginPage = () => {\n  const dispatch = useAppDispatch();\n\n  const loginSubmitHandler = ({ email, password }: ISignInData) => {\n    dispatch(signIn({ email, password }));\n  };\n\n  return (\n    <Container className=\"container\">\n      <div className=\"form-container\">\n        <LoginForm loginSubmitHandler={loginSubmitHandler}></LoginForm>\n      </div>\n\n      <div className=\"text-container\">\n        <div className=\"text\">\n          <b>“</b>\n          <p className=\"text-body\">\n            Books are the ships of thoughts, wandering through the waves of\n            time.\n          </p>\n          <p className=\"text-author\">Francis Bacon</p>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Container","styled","bgTablet","bgTablet2x","bgDesktop","bgDesktop2x","props","theme","sizes","tablet","desktop","colors","transparent","formBg","bg","bg2x","primary","secondary","accentDark","accent","text","secondaryDark","LoginForm","loginSubmitHandler","schema","yup","shape","email","matches","required","trim","password","min","submitHandler","values","isValid","result","onSubmit","initialValues","validationSchema","type","className","htmlFor","name","id","placeholder","to","dispatch","useAppDispatch","signIn"],"sourceRoot":""}