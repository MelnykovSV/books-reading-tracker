{"version":3,"file":"static/js/196.c9d4c187.chunk.js","mappings":"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","sources":["pages/TrainingPage/TrainingPage.styled.tsx","components/MyTraining/MyTraining.styled.tsx","components/TrainingList/TrainingList.styled.tsx","components/TrainingList/TrainingList.tsx","components/MyTraining/MyTraining.tsx","components/MyGoals/MyGoals.styled.tsx","components/MyGoals/MyGoals.tsx","components/MyTrainingResults/MyTrainingResults.styled.tsx","components/MyTrainingResults/MyTrainingResults.tsx","pages/TrainingPage/TrainingPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import styled from '@emotion/styled';\nimport { IStyledProps } from '../../interfaces';\n\nexport const Container = styled.form<IStyledProps>``;\n","import styled from '@emotion/styled';\nimport { IStyledProps } from '../../interfaces';\n\nexport const Container = styled.div<IStyledProps>``;\n","import { Container } from './TrainingList.styled';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { ITrainingList } from '../../interfaces';\n\nexport const TrainingList = ({\n  trainingList,\n  removeFromTrainingListHandler,\n}: ITrainingList) => {\n  return (\n    <Container>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Book title</TableCell>\n              <TableCell align=\"left\">Author</TableCell>\n              <TableCell align=\"left\">Year</TableCell>\n              <TableCell align=\"left\">Pages</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {trainingList.map(row => (\n              <TableRow\n                key={row._id}\n                sx={{ '&:last-of-type td, &:last-of-type th': { border: 0 } }}\n              >\n                <TableCell align=\"left\">{row.title}</TableCell>\n                <TableCell align=\"left\">{row.author}</TableCell>\n                <TableCell align=\"left\">{row.publishYear}</TableCell>\n                <TableCell align=\"left\">{row.pagesTotal}</TableCell>\n                <TableCell align=\"left\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      console.log(row);\n                      removeFromTrainingListHandler(row._id);\n                    }}\n                  >\n                    D\n                  </button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n","import { Container } from './MyTraining.styled';\n\nimport { TrainingList } from '../TrainingList/TrainingList';\n\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\n\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { IBookData } from '../../interfaces';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\n\nimport { getGoingToRead } from '../../redux/auth/authSlice';\n\nimport { createPlanning, getPlanning } from '../../redux/planning/operations';\nimport { getIsLoggedIn, getCurrentlyReading } from '../../redux/auth/authSlice';\n\nconst initialState = [] as IBookData[];\nconst initialCurrentBook = {} as IBookData;\n\nexport const MyTraining = () => {\n  const isLoggedIn = useAppSelector(getIsLoggedIn);\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getPlanning());\n      console.log('something');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoggedIn]);\n\n  const getCurrentDate = () => {\n    const date = new Date();\n\n    return `${date.getFullYear()}-${`${date.getUTCMonth() + 1}`.padStart(\n      2,\n      '0'\n    )}-${date.getDate()}`;\n  };\n\n  const [trainingBookList, setTrainingBookList] = useState(initialState);\n  const [startDate, setStartDate] = useState(getCurrentDate());\n  const [endDate, setEndDate] = useState('');\n  const [currentBook, setCurrentBook] = useState(initialCurrentBook);\n\n  const formSubmitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const queryBody = {\n      startDate,\n      endDate,\n      books: trainingBookList.map(item => item._id),\n    };\n\n    dispatch(createPlanning(queryBody));\n    console.log(queryBody);\n  };\n\n  const goingToRead = useAppSelector(getGoingToRead);\n  const currentlyReading = useAppSelector(getCurrentlyReading);\n\n  const booksList = [\n    ...goingToRead.map(item => ({ ...item, label: item.title })),\n    ...currentlyReading.map(item => ({ ...item, label: item.title })),\n  ];\n\n  const addToTrainingBookListHandler = (bookData: IBookData) => {\n    console.log('addToTrainingBookListHandler');\n    if (bookData && !trainingBookList.find(item => item._id === bookData._id)) {\n      const { title, author, publishYear, pagesTotal, _id, pagesFinished } =\n        bookData;\n      setTrainingBookList([\n        ...trainingBookList,\n        { title, author, publishYear, pagesTotal, _id, pagesFinished },\n      ]);\n    }\n  };\n\n  const removeFromTrainingBookListHandler = (id: string) => {\n    setTrainingBookList(\n      trainingBookList.filter((item: IBookData) => item._id !== id)\n    );\n  };\n\n  return (\n    <Container onSubmit={formSubmitHandler}>\n      <h2>My training</h2>\n\n      <div className=\"date-input-container\">\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Start\"\n            defaultValue={dayjs(getCurrentDate())}\n            onChange={newValue => {\n              if (newValue) {\n                setStartDate(newValue.format('YYYY-MM-DD'));\n              }\n            }}\n            disabled\n          />\n        </LocalizationProvider>\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Finish\"\n            onChange={newValue => {\n              if (newValue) {\n                setEndDate(newValue.format('YYYY-MM-DD'));\n              }\n            }}\n            disablePast\n            minDate={dayjs().add(1, 'day')}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"books-input-container\">\n        <Autocomplete\n          onChange={(event: any, book: IBookData | null) => {\n            if (book) {\n              console.log(book);\n              setCurrentBook(book);\n            }\n          }}\n          disablePortal\n          isOptionEqualToValue={(option, value) => {\n            return option._id === value._id;\n          }}\n          id=\"combo-box-demo\"\n          options={booksList}\n          sx={{ width: 300 }}\n          renderInput={params => (\n            <TextField {...params} label=\"Choose books from the library \" />\n          )}\n        />\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (currentBook) {\n              addToTrainingBookListHandler(currentBook);\n            }\n          }}\n        >\n          Add\n        </button>\n\n        <button type=\"submit\">Start training</button>\n      </div>\n      <TrainingList\n        trainingList={trainingBookList}\n        removeFromTrainingListHandler={removeFromTrainingBookListHandler}\n      ></TrainingList>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import { Container } from './MyGoals.styled';\nimport { useAppSelector } from '../../redux/hooks';\nimport {\n  getPlanningFromStore,\n  getStartDate,\n  getEndDate,\n} from '../../redux/planning/planningSlice';\nimport { IBookData } from '../../interfaces';\n\nimport dayjs from 'dayjs';\n\nexport const MyGoals = () => {\n  const planning = useAppSelector(getPlanningFromStore);\n\n  const startDate = useAppSelector(getStartDate);\n  const endDate = useAppSelector(getEndDate);\n\n  return (\n    <Container>\n      <h2>My goals</h2>\n      <ul className=\"goals-body\">\n        <li className=\"goal\">\n          <p>{planning.status === 'fulfilled' ? planning.books.length : 0}</p>\n          <p>Amount of books</p>\n        </li>\n        <li className=\"goal\">\n          <p>\n            {planning.status === 'fulfilled'\n              ? dayjs(endDate).diff(dayjs(startDate), 'day')\n              : 0}\n          </p>\n          <p>Amount of days</p>\n        </li>\n        <li className=\"goal\">\n          <p>\n            {planning.status === 'fulfilled'\n              ? planning.books.filter(\n                  (item: IBookData) => item.pagesTotal !== item.pagesFinished\n                ).length\n              : 0}\n          </p>\n          <p>Books left</p>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import { useState } from 'react';\nimport { Container } from './MyTrainingResults.styled';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { TextField } from '@mui/material';\n\nimport axios from 'axios';\n\nexport const MyTrainingResults = () => {\n  const [readingDate, setReadingDate] = useState(dayjs().format('YYYY-MM-DD'));\n  const [pagesAmount, setPagesAmount] = useState(0);\n\n  return (\n    <Container>\n      <form\n        onSubmit={async e => {\n          e.preventDefault();\n          const response = await axios.patch('/planning', {\n            pages: pagesAmount,\n          });\n          console.log(response);\n        }}\n      >\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Date\"\n            defaultValue={dayjs(readingDate)}\n            onChange={newValue => {\n              if (newValue) {\n                setReadingDate(newValue.format('YYYY-MM-DD'));\n                console.log(newValue.format('YYYY-MM-DD'));\n              }\n            }}\n          />\n        </LocalizationProvider>\n\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Amount of pages\"\n          variant=\"outlined\"\n          type=\"number\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            console.log(e.target.value);\n            setPagesAmount(Number(e.target.value));\n          }}\n        />\n\n        <button type=\"submit\">Add result</button>\n      </form>\n    </Container>\n  );\n};\n","import { Container } from './TrainingPage.styled';\n\nimport { MyTraining } from '../../components/MyTraining/MyTraining';\nimport { MyGoals } from '../../components/MyGoals/MyGoals';\nimport { MyTrainingResults } from '../../components/MyTrainingResults/MyTrainingResults';\n\nconst TrainingPage = () => {\n  return (\n    <Container>\n      <MyTraining></MyTraining>\n      <MyGoals></MyGoals>\n      <MyTrainingResults></MyTrainingResults>\n\n      {/* <LineChart\n        xAxis={[{ data: [1, 2, 3, 5, 8, 10] }]}\n        series={[\n          {\n            data: [2, 5.5, 2, 8.5, 1.5, 5],\n          },\n        ]}\n        width={500}\n        height={300}\n      /> */}\n    </Container>\n  );\n};\n\nexport default TrainingPage;\n"],"names":["Container","styled","TrainingList","trainingList","removeFromTrainingListHandler","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","border","title","author","publishYear","pagesTotal","type","onClick","console","log","_id","initialState","initialCurrentBook","MyTraining","isLoggedIn","useAppSelector","getIsLoggedIn","dispatch","useAppDispatch","useEffect","getPlanning","getCurrentDate","date","Date","getFullYear","getUTCMonth","padStart","getDate","useState","trainingBookList","setTrainingBookList","startDate","setStartDate","endDate","setEndDate","currentBook","setCurrentBook","goingToRead","getGoingToRead","currentlyReading","getCurrentlyReading","booksList","item","label","onSubmit","e","preventDefault","queryBody","books","createPlanning","className","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","defaultValue","dayjs","onChange","newValue","format","disabled","disablePast","minDate","add","Autocomplete","event","book","disablePortal","isOptionEqualToValue","option","value","id","options","width","renderInput","params","TextField","bookData","find","pagesFinished","addToTrainingBookListHandler","filter","MyGoals","planning","getPlanningFromStore","getStartDate","getEndDate","status","length","diff","MyTrainingResults","readingDate","setReadingDate","pagesAmount","setPagesAmount","axios","pages","response","variant","target","Number"],"sourceRoot":""}