{"version":3,"file":"static/js/389.36a3774f.chunk.js","mappings":"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","sources":["images/icons/thumb.svg","pages/TrainingPage/TrainingPage.styled.tsx","components/MyTraining/MyTraining.styled.tsx","components/TrainingListActive/TrainingListActive.styled.tsx","components/TrainingListActive/TrainingListActive.tsx","components/Timer/Timer.styled.tsx","components/Timer/Timer.tsx","components/MyTraining/MyTraining.tsx","components/MyGoals/MyGoals.styled.tsx","components/MyGoals/MyGoals.tsx","components/MyTrainingRegistration/MyTrainingRegistration.styled.tsx","components/TrainingList/TrainingList.styled.tsx","components/TrainingList/TrainingList.tsx","components/MyTrainingRegistration/MyTrainingRegistration.tsx","components/ModalBody/ModalBody.styled.tsx","components/ModalBody/ModalBody.tsx","pages/TrainingPage/TrainingPage.tsx"],"sourcesContent":["var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgThumb(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 54,\n    height: 54,\n    viewBox: \"0 0 54 54\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"thumb_up-24px 1\",\n    clipPath: \"url(#clip0_4306_6660)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M20.25 47.25H40.5C42.3675 47.25 43.965 46.125 44.64 44.505L51.435 28.6425C51.6375 28.125 51.75 27.585 51.75 27V22.5C51.75 20.025 49.725 18 47.25 18H33.0525L35.19 7.7175L35.2575 6.9975C35.2575 6.075 34.875 5.22 34.2675 4.6125L31.8825 2.25L17.055 17.0775C16.245 17.8875 15.75 19.0125 15.75 20.25V42.75C15.75 45.225 17.775 47.25 20.25 47.25ZM20.25 20.25L30.015 10.485L27 22.5H47.25V27L40.5 42.75H20.25V20.25ZM2.25 20.25H11.25V47.25H2.25V20.25Z\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_4306_6660\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 54,\n    height: 54\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThumb);\nexport default __webpack_public_path__ + \"static/media/thumb.7fdf5153ce83d86a7fd0f669a21685a2.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import { Container } from './TrainingListActive.styled';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nimport { useAppSelector } from '../../redux/hooks';\nimport { getPlanningBooks } from '../../redux/planning/planningSlice';\n\nexport const TrainingListActive = () => {\n  const planningBooks = useAppSelector(getPlanningBooks);\n\n  return (\n    <Container>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Book title</TableCell>\n              <TableCell align=\"left\">Author</TableCell>\n              <TableCell align=\"left\">Year</TableCell>\n              <TableCell align=\"left\">Pages</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {planningBooks.map(row => (\n              <TableRow\n                key={row._id}\n                sx={{ '&:last-of-type td, &:last-of-type th': { border: 0 } }}\n              >\n                <TableCell align=\"left\">\n                  {row.pagesTotal === row.pagesFinished ? 'true' : 'false'}' '\n                  {row.title}\n                </TableCell>\n                <TableCell align=\"left\">{row.author}</TableCell>\n                <TableCell align=\"left\">{row.publishYear}</TableCell>\n                <TableCell align=\"left\">{row.pagesTotal}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import { Container } from './Timer.styled';\nimport { useState, useEffect } from 'react';\nimport { useAppSelector } from '../../redux/hooks';\nimport { getEndDate } from '../../redux/planning/planningSlice';\nimport dayjs from 'dayjs';\nimport { useAppDispatch } from '../../redux/hooks';\nimport { finishPlanning } from '../../redux/planning/planningSlice';\nimport { timeDifferenceProcessor } from '../../helpers';\n\nexport const Timer = () => {\n  const dispatch = useAppDispatch();\n\n  const endDate = useAppSelector(getEndDate);\n\n  //to test how timer ends\n  // const endDate = Date.now() + 20000;\n\n  const [timeLeft, setTimeLeft] = useState(dayjs(endDate).diff(dayjs()));\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (dayjs(endDate).diff(dayjs()) >= 0) {\n        setTimeLeft(dayjs(endDate).diff(dayjs()));\n      } else {\n        setTimeLeft(0);\n        dispatch(finishPlanning('fail'));\n        clearInterval(intervalId);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container>\n      <dl>\n        <div>\n          <dt>\n            {timeDifferenceProcessor(timeLeft).d.toString().padStart(2, '0')}\n          </dt>\n          <dd>Days</dd>\n        </div>\n        <div>\n          <dt>\n            {timeDifferenceProcessor(timeLeft).h.toString().padStart(2, '0')}\n          </dt>\n          <dd>Hrs</dd>\n        </div>\n        <div>\n          <dt>\n            {timeDifferenceProcessor(timeLeft).m.toString().padStart(2, '0')}\n          </dt>\n          <dd>Minutes</dd>\n        </div>\n        <div>\n          <dt>\n            {timeDifferenceProcessor(timeLeft).s.toString().padStart(2, '0')}\n          </dt>\n          <dd>Seconds</dd>\n        </div>\n      </dl>\n    </Container>\n  );\n};\n","import { Container } from './MyTraining.styled';\nimport { TrainingListActive } from '../TrainingListActive/TrainingListActive';\nimport { Timer } from '../Timer/Timer';\n\nexport const MyTraining = () => {\n  return (\n    <Container>\n      <Timer></Timer>\n      <TrainingListActive></TrainingListActive>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import { Container } from './MyGoals.styled';\nimport { useAppSelector } from '../../redux/hooks';\nimport {\n  getPlanningFromStore,\n  getStartDate,\n  getEndDate,\n  getPlanningId,\n} from '../../redux/planning/planningSlice';\nimport { IMyGoalsProps } from '../../interfaces';\nimport { getCurrentBookNumber } from '../../helpers';\n\nimport dayjs from 'dayjs';\n\nexport const MyGoals = ({\n  trainingBookList,\n  planningStartDate,\n  planningEndDate,\n}: IMyGoalsProps) => {\n  const planning = useAppSelector(getPlanningFromStore);\n\n  const startDate = useAppSelector(getStartDate);\n  const endDate = useAppSelector(getEndDate);\n  const planningId = useAppSelector(getPlanningId);\n\n  return (\n    <Container>\n      <h2>My goals</h2>\n      <ul className=\"goals-body\">\n        <li className=\"goal\">\n          <p>{planningId ? planning.books.length : trainingBookList.length}</p>\n          <p>Amount of books</p>\n        </li>\n        <li className=\"goal\">\n          <p>\n            {planningId\n              ? dayjs(endDate).diff(dayjs(startDate), 'day')\n              : dayjs(planningEndDate).diff(planningStartDate, 'day') || 0}\n          </p>\n          <p>Amount of days</p>\n        </li>\n        {planningId && (\n          <li className=\"goal\">\n            <p>\n              {planning.books.length - getCurrentBookNumber(planning.books) + 1}\n            </p>\n            <p>Books left</p>\n          </li>\n        )}\n      </ul>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport { IStyledProps } from '../../interfaces';\n\nexport const Container = styled.form<IStyledProps>``;\n","import styled from '@emotion/styled';\nimport { IStyledProps } from '../../interfaces';\n\nexport const Container = styled.div<IStyledProps>``;\n","import { Container } from './TrainingList.styled';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { ITrainingList } from '../../interfaces';\n\nexport const TrainingList = ({\n  trainingList,\n  removeFromTrainingListHandler,\n}: ITrainingList) => {\n  return (\n    <Container>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Book title</TableCell>\n              <TableCell align=\"left\">Author</TableCell>\n              <TableCell align=\"left\">Year</TableCell>\n              <TableCell align=\"left\">Pages</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {trainingList.map(row => (\n              <TableRow\n                key={row._id}\n                sx={{ '&:last-of-type td, &:last-of-type th': { border: 0 } }}\n              >\n                <TableCell align=\"left\">{row.title}</TableCell>\n                <TableCell align=\"left\">{row.author}</TableCell>\n                <TableCell align=\"left\">{row.publishYear}</TableCell>\n                <TableCell align=\"left\">{row.pagesTotal}</TableCell>\n                <TableCell align=\"left\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      removeFromTrainingListHandler(row._id);\n                    }}\n                  >\n                    D\n                  </button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n","import { Container } from './MyTrainingRegistration.styled';\n\nimport { TrainingList } from '../TrainingList/TrainingList';\n\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\n\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { IBookData, IMyTrainingProps } from '../../interfaces';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\n\nimport { getGoingToRead } from '../../redux/auth/authSlice';\n\nimport { createPlanning } from '../../redux/planning/operations';\nimport { getCurrentlyReading } from '../../redux/auth/authSlice';\n\n// const initialState = [] as IBookData[];\n// const initialCurrentBook = {} as IBookData;\n\nexport const MyTrainingRegistration = ({\n  trainingBookList,\n  startDate,\n  endDate,\n  updateTrainingBookList,\n  updateStartDate,\n  updateEndDate,\n  updateIsFormSubmitted,\n}: IMyTrainingProps) => {\n  // const isLoggedIn = useAppSelector(getIsLoggedIn);\n\n  const dispatch = useAppDispatch();\n  // useEffect(() => {\n  //   if (isLoggedIn) {\n  //     dispatch(getPlanning());\n  //     console.log('something');\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [isLoggedIn]);\n\n  const getCurrentDate = () => {\n    return dayjs().format('YYYY-MM-DD');\n  };\n\n  // const [trainingBookList, setTrainingBookList] = useState(initialState);\n  // const [startDate, setStartDate] = useState(getCurrentDate());\n  // const [endDate, setEndDate] = useState('');\n\n  const [currentBook, setCurrentBook] = useState<IBookData | null>(null);\n\n  const formSubmitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const queryBody = {\n      startDate,\n      endDate,\n      books: trainingBookList.map(item => item._id),\n    };\n\n    dispatch(createPlanning(queryBody));\n    // dispatch(updateBooksAfterPlanningCreation(planningBooks));\n    updateIsFormSubmitted(true);\n  };\n\n  const goingToRead = useAppSelector(getGoingToRead);\n  const currentlyReading = useAppSelector(getCurrentlyReading);\n\n  const booksList = [\n    ...goingToRead.map(item => ({ ...item, label: item.title })),\n    ...currentlyReading.map(item => ({ ...item, label: item.title })),\n  ];\n\n  const addToTrainingBookListHandler = (bookData: IBookData) => {\n    if (bookData && !trainingBookList.find(item => item._id === bookData._id)) {\n      const { title, author, publishYear, pagesTotal, _id, pagesFinished } =\n        bookData;\n      updateTrainingBookList([\n        ...trainingBookList,\n        { title, author, publishYear, pagesTotal, _id, pagesFinished },\n      ]);\n    }\n  };\n\n  const removeFromTrainingBookListHandler = (id: string) => {\n    updateTrainingBookList(\n      trainingBookList.filter((item: IBookData) => item._id !== id)\n    );\n  };\n\n  // useEffect(() => {\n  //   window.addEventListener('beforeunload', alertUser)\n  //   window.addEventListener('unload', handleEndConcert)\n  //   return () => {\n  //     window.removeEventListener('beforeunload', alertUser)\n  //     window.removeEventListener('unload', handleEndConcert)\n  //   }\n  // }, [])\n\n  // const handleEndConcert = async () => {\n  //   await fetcher({\n  //     url: endConcert(concert.id),\n  //     method: 'PUT'\n  //   })\n  // }\n\n  return (\n    <Container onSubmit={formSubmitHandler}>\n      <h2>My training</h2>\n\n      <div className=\"date-input-container\">\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Start\"\n            defaultValue={dayjs(getCurrentDate())}\n            onChange={newValue => {\n              if (newValue) {\n                updateStartDate(newValue.format('YYYY-MM-DD'));\n              }\n            }}\n            disabled\n          />\n        </LocalizationProvider>\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Finish\"\n            onChange={newValue => {\n              if (newValue) {\n                updateEndDate(newValue.format('YYYY-MM-DD'));\n              }\n            }}\n            disablePast\n            minDate={dayjs().add(1, 'day')}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"books-input-container\">\n        <Autocomplete\n          onChange={(event: any, book: IBookData | null) => {\n            if (book) {\n              setCurrentBook(book);\n            }\n          }}\n          value={currentBook}\n          disablePortal\n          isOptionEqualToValue={(option, value) => {\n            return option._id === value._id;\n          }}\n          id=\"combo-box-demo\"\n          options={booksList}\n          sx={{ width: 300 }}\n          renderInput={params => (\n            <TextField {...params} label=\"Choose books from the library \" />\n          )}\n        />\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (currentBook) {\n              addToTrainingBookListHandler(currentBook);\n              setCurrentBook(null);\n            }\n          }}\n        >\n          Add\n        </button>\n\n        <button type=\"submit\">Start training</button>\n      </div>\n      <TrainingList\n        trainingList={trainingBookList}\n        removeFromTrainingListHandler={removeFromTrainingBookListHandler}\n      ></TrainingList>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: min(280px, 100%);\n  background: #fff;\n  box-shadow: 10px 10px 20px 0px rgba(9, 30, 63, 0.2);\n  padding: 44px;\n\n  @media screen and (min-width: 768px) {\n    width: min(394px, 100%);\n    padding: 40px 29px 48px;\n  }\n\n  svg {\n    fill: #a6abb9;\n    margin: 0 auto;\n    display: block;\n    margin-bottom: 14px;\n  }\n\n  &.success,\n  &.book-read {\n    svg {\n      fill: #ff6b08;\n    }\n  }\n  p {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 22px;\n    width: 130px;\n    margin: 0 auto;\n    margin-bottom: 14px;\n    text-align: center;\n    @media screen and (min-width: 768px) {\n      width: 289px;\n      margin-bottom: 25px;\n    }\n  }\n  .buttons-container {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    @media screen and (min-width: 768px) {\n      flex-direction: row;\n      justify-content: space-between;\n      margin: 0;\n    }\n  }\n  button {\n    cursor: pointer;\n    display: block;\n    margin: 0 auto;\n    padding: 11px;\n    min-width: 130px;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    border: 1px solid #000;\n    background-color: white;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.25);\n    @media screen and (min-width: 768px) {\n      min-width: 152px;\n    }\n  }\n  .button-accent {\n    color: white;\n    border: none;\n    background: #ff6b08;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.25);\n  }\n`;\n","import { Container } from './ModalBody.styled';\n\nimport { createPortal } from 'react-dom';\nimport { IModalProps } from '../../interfaces';\nimport { useAppDispatch } from '../../redux/hooks';\nimport {\n  // getPlanningStatus,\n  deletePlanning,\n} from '../../redux/planning/planningSlice';\nimport { useNavigate } from 'react-router';\n\nimport { ReactComponent as ThumbIcon } from './../../images/icons/thumb.svg';\n\nconst modalRoot: Element | DocumentFragment =\n  document.querySelector('#modal-root')!;\n\nexport const ModalBody = ({\n  modalType,\n  modalCloseHandler,\n  resetTrainingRegistrationData,\n}: IModalProps) => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  switch (modalType) {\n    case 'success':\n      return (\n        <Container className=\"success\">\n          <ThumbIcon />\n          <p>Congratulations! You made it in time!</p>\n          <div className=\"buttons-container\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                modalCloseHandler();\n                resetTrainingRegistrationData();\n                dispatch(deletePlanning());\n              }}\n              className=\"button-accent\"\n            >\n              New training\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                modalCloseHandler();\n                navigate('/');\n                dispatch(deletePlanning());\n              }}\n            >\n              Back\n            </button>\n          </div>\n        </Container>\n      );\n\n    case 'fail':\n      return createPortal(\n        <Container className=\"fail\">\n          <ThumbIcon />\n          <p>\n            Well done! but you need to be a little bit faster. You can do it)\n          </p>\n          <div className=\"buttons-container\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                modalCloseHandler();\n                resetTrainingRegistrationData();\n                dispatch(deletePlanning());\n              }}\n              className=\"button-accent\"\n            >\n              New training\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                modalCloseHandler();\n                navigate('/');\n                dispatch(deletePlanning());\n              }}\n            >\n              Back\n            </button>\n          </div>\n        </Container>,\n        modalRoot\n      );\n    case 'book read':\n      return (\n        <Container className=\"book-read\">\n          <ThumbIcon />\n          <p>Congratulations! Another book read.</p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              modalCloseHandler();\n            }}\n            className=\"button-accent\"\n          >\n            Done\n          </button>\n        </Container>\n      );\n  }\n};\n","import { Container } from './TrainingPage.styled';\nimport { useState, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { MyTraining } from '../../components/MyTraining/MyTraining';\n\nimport { MyGoals } from '../../components/MyGoals/MyGoals';\n// import { MyTrainingResults } from '../../components/MyTrainingResults/MyTrainingResults';\nimport { MyTrainingRegistration } from '../../components/MyTrainingRegistration/MyTrainingRegistration';\nimport {\n  getPlanningStats,\n  getPlanningId,\n  getPlanningStatus,\n  getPlanningBooks,\n  getStartDate,\n  getEndDate,\n  getProcessedChartData,\n} from '../../redux/planning/planningSlice';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { getPlanningLoadingStatus } from '../../redux/planning/planningSlice';\n// import { LineChart } from '@mui/x-charts';\nimport { ModalBody } from '../../components/ModalBody/ModalBody';\n\nimport { processBooksData, arraySum } from '../../helpers';\nimport { IBookData } from '../../interfaces';\nimport { getSid } from '../../redux/auth/authSlice';\nimport { getPlanning } from '../../redux/planning/operations';\nimport {\n  updateBooksAfterPlanningCreation,\n  updateBookToRead,\n} from '../../redux/auth/authSlice';\nimport { detectCurrentBookNumber } from '../../redux/planning/planningSlice';\nimport { Modal } from '@mui/material';\n\nimport { Box } from '@mui/system';\nimport { deletePlanning } from '../../redux/planning/planningSlice';\n\nimport { processPlanningStats } from '../../helpers';\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n\n} from 'recharts';\n\nconst TrainingPage = () => {\n  const stats = useAppSelector(getPlanningStats);\n  const planningStartDate = useAppSelector(getStartDate);\n  const planningEndDate = useAppSelector(getEndDate);\n  const status = useAppSelector(getPlanningLoadingStatus);\n  const planningId = useAppSelector(getPlanningId);\n  const planningStatus = useAppSelector(getPlanningStatus);\n  const books = useAppSelector(getPlanningBooks);\n  const currentBookNumber = useAppSelector(detectCurrentBookNumber);\n\n  const chartData = useAppSelector(getProcessedChartData);\n\n  const sid = useAppSelector(getSid);\n\n  const initialState = [] as IBookData[];\n  const getCurrentDate = () => {\n    return dayjs().format('YYYY-MM-DD');\n  };\n\n  const [trainingBookList, setTrainingBookList] = useState(initialState);\n  const [startDate, setStartDate] = useState(getCurrentDate());\n  const [endDate, setEndDate] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState('');\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n\n  const updateIsFormSubmitted = (value: boolean) => {\n    setIsFormSubmitted(value);\n  };\n\n  useEffect(() => {\n    setIsAnimated(true);\n    setTimeout(() => {\n      setIsAnimated(false);\n    }, 1000);\n  }, [chartData]);\n\n  const modalCloseHandler = () => {\n    setIsModalOpen(false);\n    resetTrainingRegistrationData();\n    dispatch(deletePlanning());\n  };\n\n  const resetTrainingRegistrationData = () => {\n    setStartDate(getCurrentDate());\n    setEndDate('');\n    setTrainingBookList(initialState);\n  };\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (sid) {\n      dispatch(getPlanning());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sid]);\n\n  useEffect(() => {\n    switch (planningStatus) {\n      case 'none':\n        if (!isDataLoaded) {\n          setIsDataLoaded(true);\n        }\n        break;\n      case 'active':\n        if (!isDataLoaded) {\n          setIsDataLoaded(true);\n        }\n        if (isFormSubmitted) {\n          dispatch(updateBooksAfterPlanningCreation(books));\n        }\n        console.log(\n          processPlanningStats(stats, planningStartDate, planningEndDate, 300)\n        );\n\n        break;\n      case 'success':\n        setModalType('success');\n        setIsModalOpen(true);\n        break;\n      case 'fail':\n        setModalType('fail');\n        setIsModalOpen(true);\n        break;\n      default:\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [planningStatus]);\n\n  useEffect(() => {\n    if (planningStatus === 'active') {\n      if (currentBookNumber && currentBookNumber !== 1 && isDataLoaded) {\n        dispatch(updateBookToRead(books[currentBookNumber - 2]));\n\n        setModalType('book read');\n\n        setIsModalOpen(true);\n      }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentBookNumber]);\n\n  const updateTrainingBookList = (value: IBookData[]) => {\n    setTrainingBookList(value);\n  };\n\n  const updateStartDate = (value: string) => {\n    setStartDate(value);\n  };\n\n  const updateEndDate = (value: string) => {\n    setEndDate(value);\n  };\n\n  if (status === 'fulfilled') {\n    console.log(\n      Object.values(processBooksData(Object.values(stats))).map(\n        (item, i, arr: any) => {\n          const result = (338 - arraySum(arr, i)) / (10 - i);\n          return result;\n        }\n      )\n    );\n  }\n\n  return (\n    <Container>\n      {(() => {\n        if (\n          planningStatus === 'active' ||\n          planningStatus === 'success' ||\n          planningStatus === 'fail'\n        ) {\n          return <MyTraining />;\n        }\n        if (planningStatus === 'none') {\n          return (\n            <MyTrainingRegistration\n              trainingBookList={trainingBookList}\n              startDate={startDate}\n              endDate={endDate}\n              updateTrainingBookList={updateTrainingBookList}\n              updateStartDate={updateStartDate}\n              updateEndDate={updateEndDate}\n              updateIsFormSubmitted={updateIsFormSubmitted}\n            />\n          );\n        } else {\n          return <div>Loading...</div>;\n        }\n      })()}\n\n      <MyGoals\n        trainingBookList={trainingBookList}\n        planningStartDate={startDate}\n        planningEndDate={endDate}\n      ></MyGoals>\n\n      {planningId ? (\n        <LineChart\n          width={500}\n          height={300}\n          data={chartData}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid />\n          <XAxis dataKey=\"name\" tick={() => null as any} tickSize={0}></XAxis>\n          <YAxis tick={false} />\n          <Tooltip />\n\n          <Line\n            type=\"monotone\"\n            dataKey=\"actual\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 4 }}\n            isAnimationActive={isAnimated}\n            label={({ x, y, stroke, value }) => {\n              if (value === chartData[chartData.length - 1].actual) {\n                return (\n                  <text\n                    x={x}\n                    y={y}\n                    // dy={-4}\n                    fill={stroke}\n                    fontSize={10}\n                    textAnchor=\"middle\"\n                  >\n                    {value}\n                  </text>\n                );\n              } else {\n                return (\n                  <text\n                    x={x}\n                    y={y}\n                    // dy={-4}\n                    fill={stroke}\n                    fontSize={10}\n                    textAnchor=\"middle\"\n                  ></text>\n                );\n              }\n            }}\n          />\n\n          <Line\n            type=\"monotone\"\n            dataKey=\"plan\"\n            stroke=\"#82ca9d\"\n            isAnimationActive={false}\n            label={true}\n          />\n        </LineChart>\n      ) : null}\n\n      <Modal open={isModalOpen} onClose={modalCloseHandler}>\n        <Box>\n          <ModalBody\n            modalType={modalType}\n            modalCloseHandler={() => {\n              setIsModalOpen(false);\n            }}\n            resetTrainingRegistrationData={resetTrainingRegistrationData}\n          />\n        </Box>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default TrainingPage;\n"],"names":["_g","_defs","Container","styled","TrainingListActive","planningBooks","useAppSelector","getPlanningBooks","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","border","pagesTotal","pagesFinished","title","author","publishYear","_id","Timer","dispatch","useAppDispatch","endDate","getEndDate","useState","dayjs","diff","timeLeft","setTimeLeft","useEffect","intervalId","setInterval","finishPlanning","clearInterval","timeDifferenceProcessor","d","toString","padStart","h","m","s","MyTraining","MyGoals","trainingBookList","planningStartDate","planningEndDate","planning","getPlanningFromStore","startDate","getStartDate","planningId","getPlanningId","className","books","length","getCurrentBookNumber","TrainingList","trainingList","removeFromTrainingListHandler","type","onClick","MyTrainingRegistration","updateTrainingBookList","updateStartDate","updateEndDate","updateIsFormSubmitted","currentBook","setCurrentBook","goingToRead","getGoingToRead","currentlyReading","getCurrentlyReading","booksList","item","label","onSubmit","e","preventDefault","queryBody","createPlanning","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","defaultValue","format","onChange","newValue","disabled","disablePast","minDate","add","Autocomplete","event","book","value","disablePortal","isOptionEqualToValue","option","id","options","width","renderInput","params","TextField","bookData","find","addToTrainingBookListHandler","filter","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgThumb","_ref","svgRef","titleId","props","height","viewBox","xmlns","ref","clipPath","ForwardRef","modalRoot","document","querySelector","ModalBody","modalType","modalCloseHandler","resetTrainingRegistrationData","navigate","useNavigate","deletePlanning","createPortal","stats","getPlanningStats","status","getPlanningLoadingStatus","planningStatus","getPlanningStatus","currentBookNumber","detectCurrentBookNumber","chartData","getProcessedChartData","sid","getSid","initialState","getCurrentDate","setTrainingBookList","setStartDate","setEndDate","isModalOpen","setIsModalOpen","setModalType","isFormSubmitted","setIsFormSubmitted","isDataLoaded","setIsDataLoaded","isAnimated","setIsAnimated","setTimeout","getPlanning","updateBooksAfterPlanningCreation","console","log","processPlanningStats","updateBookToRead","values","processBooksData","arr","arraySum","LineChart","data","margin","top","right","left","bottom","CartesianGrid","XAxis","dataKey","tick","tickSize","YAxis","Tooltip","Line","stroke","activeDot","r","isAnimationActive","x","y","actual","fill","fontSize","textAnchor","Modal","open","onClose","Box"],"sourceRoot":""}