{"version":3,"file":"static/js/950.c8f1813d.chunk.js","mappings":"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","sources":["pages/TrainingPage/TrainingPage.styled.tsx","components/MyTraining/MyTraining.styled.tsx","components/TrainingList/TrainingList.styled.tsx","components/TrainingList/TrainingList.tsx","components/MyTraining/MyTraining.tsx","pages/TrainingPage/TrainingPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n","import styled from '@emotion/styled';\nimport { IStyledProps } from '../../interfaces';\n\nexport const Container = styled.form<IStyledProps>``;\n","import styled from '@emotion/styled';\nimport { IStyledProps } from '../../interfaces';\n\nexport const Container = styled.div<IStyledProps>``;\n","import { Container } from './TrainingList.styled';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { ITrainingList } from '../../interfaces';\n\nexport const TrainingList = ({\n  trainingList,\n  removeFromTrainingListHandler,\n}: ITrainingList) => {\n  return (\n    <Container>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">Book title</TableCell>\n              <TableCell align=\"left\">Author</TableCell>\n              <TableCell align=\"left\">Year</TableCell>\n              <TableCell align=\"left\">Pages</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {trainingList.map(row => (\n              <TableRow\n                key={row._id}\n                sx={{ '&:last-of-type td, &:last-of-type th': { border: 0 } }}\n              >\n                <TableCell align=\"left\">{row.title}</TableCell>\n                <TableCell align=\"left\">{row.author}</TableCell>\n                <TableCell align=\"left\">{row.publishYear}</TableCell>\n                <TableCell align=\"left\">{row.pagesTotal}</TableCell>\n                <TableCell align=\"left\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      console.log(row);\n                      removeFromTrainingListHandler(row._id);\n                    }}\n                  >\n                    D\n                  </button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n","import { Container } from './MyTraining.styled';\n\nimport { TrainingList } from '../TrainingList/TrainingList';\n\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\n\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { Autocomplete } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { IBookData } from '../../interfaces';\nimport { useAppSelector } from '../../redux/hooks';\n\nimport { getGoingToRead } from '../../redux/auth/authSlice';\n\nconst initialState = [] as IBookData[];\nconst initialCurrentBook = {} as IBookData;\n\nexport const MyTraining = () => {\n  const getCurrentDate = () => {\n    const date = new Date();\n\n    return `${date.getFullYear()}-${date.getUTCMonth() + 1}-${date.getDate()}`;\n  };\n\n  const [trainingBookList, setTrainingBookList] = useState(initialState);\n  const [startDate, setStartDate] = useState(getCurrentDate());\n  const [endDate, setEndDate] = useState('');\n  const [currentBook, setCurrentBook] = useState(initialCurrentBook);\n\n  const formSubmitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const queryBody = {\n      startDate,\n      endDate,\n      books: trainingBookList.map(item => item._id),\n    };\n    console.log(queryBody);\n  };\n\n  const goingToRead = useAppSelector(getGoingToRead);\n\n  const booksList = goingToRead.map(item => ({ ...item, label: item.title }));\n\n  const addToTrainingBookListHandler = (bookData: IBookData) => {\n    console.log('addToTrainingBookListHandler');\n    if (bookData && !trainingBookList.find(item => item._id === bookData._id)) {\n      const { title, author, publishYear, pagesTotal, _id, pagesFinished } =\n        bookData;\n      setTrainingBookList([\n        ...trainingBookList,\n        { title, author, publishYear, pagesTotal, _id, pagesFinished },\n      ]);\n    }\n  };\n\n  const removeFromTrainingBookListHandler = (id: string) => {\n    setTrainingBookList(\n      trainingBookList.filter((item: IBookData) => item._id !== id)\n    );\n  };\n\n  return (\n    <Container onSubmit={formSubmitHandler}>\n      <h2>My training</h2>\n\n      <div className=\"date-input-container\">\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Start\"\n            defaultValue={dayjs(getCurrentDate())}\n            onChange={newValue => {\n              if (newValue) {\n                setStartDate(newValue.format('YYYY-MM-DD'));\n              }\n            }}\n            disabled\n          />\n        </LocalizationProvider>\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Finish\"\n            onChange={newValue => {\n              if (newValue) {\n                setEndDate(newValue.format('YYYY-MM-DD'));\n              }\n            }}\n            disablePast\n            minDate={dayjs().add(1, 'day')}\n          />\n        </LocalizationProvider>\n      </div>\n      <div className=\"books-input-container\">\n        <Autocomplete\n          onChange={(event: any, book: IBookData | null) => {\n            if (book) {\n              console.log(book);\n              setCurrentBook(book);\n            }\n          }}\n          disablePortal\n          isOptionEqualToValue={(option, value) => {\n            return option._id === value._id;\n          }}\n          id=\"combo-box-demo\"\n          options={booksList}\n          sx={{ width: 300 }}\n          renderInput={params => (\n            <TextField {...params} label=\"Choose books from the library \" />\n          )}\n        />\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (currentBook) {\n              addToTrainingBookListHandler(currentBook);\n            }\n          }}\n        >\n          Add\n        </button>\n\n        <button type=\"submit\">Start training</button>\n      </div>\n      <TrainingList\n        trainingList={trainingBookList}\n        removeFromTrainingListHandler={removeFromTrainingBookListHandler}\n      ></TrainingList>\n    </Container>\n  );\n};\n","import { Container } from './TrainingPage.styled';\n\nimport { MyTraining } from '../../components/MyTraining/MyTraining';\n\nconst TrainingPage = () => {\n  return (\n    <Container>\n      <MyTraining></MyTraining>\n\n      {/* <LineChart\n        xAxis={[{ data: [1, 2, 3, 5, 8, 10] }]}\n        series={[\n          {\n            data: [2, 5.5, 2, 8.5, 1.5, 5],\n          },\n        ]}\n        width={500}\n        height={300}\n      /> */}\n    </Container>\n  );\n};\n\nexport default TrainingPage;\n"],"names":["Container","styled","TrainingList","trainingList","removeFromTrainingListHandler","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","row","border","title","author","publishYear","pagesTotal","type","onClick","console","log","_id","initialState","initialCurrentBook","MyTraining","getCurrentDate","date","Date","getFullYear","getUTCMonth","getDate","useState","trainingBookList","setTrainingBookList","startDate","setStartDate","endDate","setEndDate","currentBook","setCurrentBook","booksList","useAppSelector","getGoingToRead","item","label","onSubmit","e","preventDefault","queryBody","books","className","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","defaultValue","dayjs","onChange","newValue","format","disabled","disablePast","minDate","add","Autocomplete","event","book","disablePortal","isOptionEqualToValue","option","value","id","options","width","renderInput","params","TextField","bookData","find","pagesFinished","addToTrainingBookListHandler","filter"],"sourceRoot":""}